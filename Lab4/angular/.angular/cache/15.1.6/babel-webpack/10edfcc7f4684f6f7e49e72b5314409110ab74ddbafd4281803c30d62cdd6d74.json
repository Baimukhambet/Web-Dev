{"ast":null,"code":"export default class GroupDataOperation {\n  constructor() {\n    this.orderBy = new Map(Object.entries({\n      asc: 1,\n      desc: -1\n    }));\n  }\n  resolveValue(record, key) {\n    return record[key];\n  }\n  compareValues(first, second) {\n    if (typeof first === 'string' && typeof second === 'string') {\n      return first.localeCompare(second);\n    }\n    return first > second ? 1 : first < second ? -1 : 0;\n  }\n  compareObjects(first, second, key, direction) {\n    const [a, b] = [this.resolveValue(first, key), this.resolveValue(second, key)];\n    return this.orderBy.get(direction) * this.compareValues(a, b);\n  }\n  apply(data, controller) {\n    const {\n      groupingOptions: {\n        groupKey,\n        valueKey,\n        displayKey,\n        direction\n      }\n    } = controller;\n    if (!groupKey) return data;\n    const groups = new Map();\n    data.forEach(item => {\n      var _a, _b;\n      if (typeof item !== 'object' || item === null) return;\n      const key = (_a = item[groupKey]) !== null && _a !== void 0 ? _a : 'Other';\n      const group = (_b = groups.get(key)) !== null && _b !== void 0 ? _b : [];\n      if (group.length === 0) {\n        group.push({\n          [valueKey]: key,\n          [displayKey]: key,\n          [groupKey]: key,\n          header: true\n        });\n      }\n      group.push(item);\n      groups.set(key, group);\n    });\n    groups.forEach(group => {\n      group.sort((a, b) => {\n        if (a.header || b.header) return;\n        return this.compareObjects(a, b, displayKey, direction);\n      });\n    });\n    return Array.from(groups.values()).flat();\n  }\n}","map":{"version":3,"names":["GroupDataOperation","constructor","orderBy","Map","Object","entries","asc","desc","resolveValue","record","key","compareValues","first","second","localeCompare","compareObjects","direction","a","b","get","apply","data","controller","groupingOptions","groupKey","valueKey","displayKey","groups","forEach","item","_a","_b","group","length","push","header","set","sort","Array","from","values","flat"],"sources":["/Users/tima/kbtu/4thSemester/web/Lab4/angular/node_modules/igniteui-webcomponents/components/combo/operations/group.js"],"sourcesContent":["export default class GroupDataOperation {\n    constructor() {\n        this.orderBy = new Map(Object.entries({\n            asc: 1,\n            desc: -1,\n        }));\n    }\n    resolveValue(record, key) {\n        return record[key];\n    }\n    compareValues(first, second) {\n        if (typeof first === 'string' && typeof second === 'string') {\n            return first.localeCompare(second);\n        }\n        return first > second ? 1 : first < second ? -1 : 0;\n    }\n    compareObjects(first, second, key, direction) {\n        const [a, b] = [\n            this.resolveValue(first, key),\n            this.resolveValue(second, key),\n        ];\n        return this.orderBy.get(direction) * this.compareValues(a, b);\n    }\n    apply(data, controller) {\n        const { groupingOptions: { groupKey, valueKey, displayKey, direction }, } = controller;\n        if (!groupKey)\n            return data;\n        const groups = new Map();\n        data.forEach((item) => {\n            var _a, _b;\n            if (typeof item !== 'object' || item === null)\n                return;\n            const key = (_a = item[groupKey]) !== null && _a !== void 0 ? _a : 'Other';\n            const group = (_b = groups.get(key)) !== null && _b !== void 0 ? _b : [];\n            if (group.length === 0) {\n                group.push({\n                    [valueKey]: key,\n                    [displayKey]: key,\n                    [groupKey]: key,\n                    header: true,\n                });\n            }\n            group.push(item);\n            groups.set(key, group);\n        });\n        groups.forEach((group) => {\n            group.sort((a, b) => {\n                if (a.header || b.header)\n                    return;\n                return this.compareObjects(a, b, displayKey, direction);\n            });\n        });\n        return Array.from(groups.values()).flat();\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}