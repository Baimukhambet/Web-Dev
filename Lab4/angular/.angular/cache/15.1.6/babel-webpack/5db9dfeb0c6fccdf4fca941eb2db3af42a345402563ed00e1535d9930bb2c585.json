{"ast":null,"code":"export const NAVIGATION_KEYS = new Set(['down', 'up', 'left', 'right', 'arrowdown', 'arrowup', 'arrowleft', 'arrowright', 'home', 'end', 'space', 'spacebar', ' ']);\nexport class IgcTreeNavigationService {\n  constructor(tree, selectionService) {\n    this._focusedItem = null;\n    this._lastFocusedItem = null;\n    this._activeItem = null;\n    this._visibleChildren = [];\n    this._invisibleChildren = new Set();\n    this._disabledChildren = new Set();\n    this.tree = tree;\n    this.selectionService = selectionService;\n  }\n  updateVisChild() {\n    var _a;\n    this._visibleChildren = ((_a = this.tree) === null || _a === void 0 ? void 0 : _a.items) ? this.tree.items.filter(i => !(this._invisibleChildren.has(i) || this._disabledChildren.has(i))) : [];\n  }\n  get focusedItem() {\n    return this._focusedItem;\n  }\n  focusItem(value, shouldFocus = true) {\n    var _a;\n    if (this._focusedItem === value) {\n      return;\n    }\n    this._lastFocusedItem = this._focusedItem;\n    if (this._lastFocusedItem) {\n      this._lastFocusedItem.removeAttribute('tabindex');\n    }\n    this._focusedItem = value;\n    if (this._focusedItem !== null && shouldFocus) {\n      this._focusedItem.tabIndex = 0;\n      this._focusedItem.focus({\n        preventScroll: true\n      });\n      (_a = this._focusedItem.wrapper) === null || _a === void 0 ? void 0 : _a.scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'nearest'\n      });\n    }\n  }\n  get activeItem() {\n    return this._activeItem;\n  }\n  setActiveItem(value, shouldEmit = true) {\n    if (this._activeItem === value) {\n      return;\n    }\n    if (this._activeItem && value) {\n      this._activeItem.active = false;\n    }\n    this._activeItem = value;\n    if (this._activeItem) {\n      this._activeItem.active = true;\n    }\n    if (shouldEmit && this._activeItem) {\n      this.tree.emitEvent('igcActiveItem', {\n        detail: this._activeItem\n      });\n    }\n  }\n  get visibleChildren() {\n    return this._visibleChildren;\n  }\n  update_disabled_cache(item) {\n    if (item.disabled) {\n      this._disabledChildren.add(item);\n    } else {\n      this._disabledChildren.delete(item);\n    }\n    this.updateVisChild();\n  }\n  delete_item(item) {\n    if (this.activeItem === item) {\n      this.setActiveItem(null);\n    }\n    if (this.focusedItem === item) {\n      this.focusItem(null, false);\n      const firstNotDisableItem = this.tree.items.find(i => !i.disabled);\n      if (firstNotDisableItem) {\n        firstNotDisableItem.tabIndex = 0;\n        this.focusItem(firstNotDisableItem, false);\n      }\n    }\n  }\n  update_visible_cache(item, expanded, shouldUpdateNestedChildren = true, shouldUpdate = true) {\n    var _a, _b;\n    if (expanded && !this._invisibleChildren.has(item)) {\n      (_a = item.getChildren()) === null || _a === void 0 ? void 0 : _a.forEach(child => {\n        this._invisibleChildren.delete(child);\n        if (shouldUpdateNestedChildren) {\n          this.update_visible_cache(child, child.expanded, true, false);\n        }\n      });\n    } else {\n      (_b = item.getChildren({\n        flatten: true\n      })) === null || _b === void 0 ? void 0 : _b.forEach(c => this._invisibleChildren.add(c));\n    }\n    if (shouldUpdate) {\n      this.updateVisChild();\n    }\n  }\n  setFocusedAndActiveItem(item, isActive = true, shouldFocus = true) {\n    if (isActive) {\n      this.setActiveItem(item);\n    }\n    this.focusItem(item, shouldFocus);\n  }\n  handleKeydown(event) {\n    const key = event.key.toLowerCase();\n    if (!this.focusedItem) {\n      return;\n    }\n    if (!(NAVIGATION_KEYS.has(key) || key === '*')) {\n      if (key === 'enter') {\n        this.setActiveItem(this.focusedItem);\n      }\n      return;\n    }\n    event.preventDefault();\n    this.handleNavigation(event);\n  }\n  handleNavigation(event) {\n    switch (event.key.toLowerCase()) {\n      case 'home':\n        this.setFocusedAndActiveItem(this.visibleChildren[0]);\n        break;\n      case 'end':\n        this.setFocusedAndActiveItem(this.visibleChildren[this.visibleChildren.length - 1]);\n        break;\n      case 'arrowleft':\n      case 'left':\n        if (this.tree.dir === 'rtl') {\n          this.handleArrowRight();\n        } else {\n          this.handleArrowLeft();\n        }\n        break;\n      case 'arrowright':\n      case 'right':\n        if (this.tree.dir === 'rtl') {\n          this.handleArrowLeft();\n        } else {\n          this.handleArrowRight();\n        }\n        break;\n      case 'arrowup':\n      case 'up':\n        this.handleUpDownArrow(true, event);\n        break;\n      case 'arrowdown':\n      case 'down':\n        this.handleUpDownArrow(false, event);\n        break;\n      case '*':\n        this.handleAsterisk();\n        break;\n      case ' ':\n      case 'spacebar':\n      case 'space':\n        this.handleSpace(event.shiftKey);\n        break;\n      default:\n        return;\n    }\n  }\n  handleArrowLeft() {\n    var _a, _b, _c;\n    if (((_a = this.focusedItem) === null || _a === void 0 ? void 0 : _a.expanded) && ((_b = this.focusedItem.getChildren()) === null || _b === void 0 ? void 0 : _b.length)) {\n      this.setActiveItem(this.focusedItem);\n      this.focusedItem.collapseWithEvent();\n    } else {\n      const parentItem = (_c = this.focusedItem) === null || _c === void 0 ? void 0 : _c.parent;\n      if (parentItem && !parentItem.disabled) {\n        this.setFocusedAndActiveItem(parentItem);\n      }\n    }\n  }\n  handleArrowRight() {\n    var _a, _b;\n    if (((_a = this.focusedItem.getChildren()) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n      if (!((_b = this.focusedItem) === null || _b === void 0 ? void 0 : _b.expanded)) {\n        this.setActiveItem(this.focusedItem);\n        this.focusedItem.expandWithEvent();\n      } else {\n        const firstChild = this.focusedItem.getChildren().find(item => !item.disabled);\n        if (firstChild) {\n          this.setFocusedAndActiveItem(firstChild);\n        }\n      }\n    }\n  }\n  handleUpDownArrow(isUp, event) {\n    const next = this.getVisibleItem(this.focusedItem, isUp ? -1 : 1);\n    if (next === this.focusedItem) {\n      return;\n    }\n    if (event.ctrlKey) {\n      this.setFocusedAndActiveItem(next, false);\n    } else {\n      this.setFocusedAndActiveItem(next);\n    }\n  }\n  handleAsterisk() {\n    var _a, _b, _c;\n    const items = ((_a = this.focusedItem) === null || _a === void 0 ? void 0 : _a.parent) ? (_b = this.focusedItem.parent) === null || _b === void 0 ? void 0 : _b.getChildren() : (_c = this.tree.items) === null || _c === void 0 ? void 0 : _c.filter(item => item.level === 0);\n    items === null || items === void 0 ? void 0 : items.forEach(item => {\n      if (!item.disabled && !item.expanded && item.hasChildren) {\n        item.expandWithEvent();\n      }\n    });\n  }\n  handleSpace(shiftKey = false) {\n    if (this.tree.selection === 'none') {\n      this.setActiveItem(this.focusedItem);\n      return;\n    }\n    this.setActiveItem(this.focusedItem);\n    if (shiftKey) {\n      this.selectionService.selectMultipleItems(this.focusedItem);\n      return;\n    }\n    if (this.focusedItem.selected) {\n      this.selectionService.deselectItem(this.focusedItem);\n    } else {\n      this.selectionService.selectItem(this.focusedItem);\n    }\n  }\n  getVisibleItem(item, dir = 1) {\n    const itemIndex = this.visibleChildren.indexOf(item);\n    return this.visibleChildren[itemIndex + dir] || item;\n  }\n}","map":{"version":3,"names":["NAVIGATION_KEYS","Set","IgcTreeNavigationService","constructor","tree","selectionService","_focusedItem","_lastFocusedItem","_activeItem","_visibleChildren","_invisibleChildren","_disabledChildren","updateVisChild","_a","items","filter","i","has","focusedItem","focusItem","value","shouldFocus","removeAttribute","tabIndex","focus","preventScroll","wrapper","scrollIntoView","behavior","block","inline","activeItem","setActiveItem","shouldEmit","active","emitEvent","detail","visibleChildren","update_disabled_cache","item","disabled","add","delete","delete_item","firstNotDisableItem","find","update_visible_cache","expanded","shouldUpdateNestedChildren","shouldUpdate","_b","getChildren","forEach","child","flatten","c","setFocusedAndActiveItem","isActive","handleKeydown","event","key","toLowerCase","preventDefault","handleNavigation","length","dir","handleArrowRight","handleArrowLeft","handleUpDownArrow","handleAsterisk","handleSpace","shiftKey","_c","collapseWithEvent","parentItem","parent","expandWithEvent","firstChild","isUp","next","getVisibleItem","ctrlKey","level","hasChildren","selection","selectMultipleItems","selected","deselectItem","selectItem","itemIndex","indexOf"],"sources":["/Users/tima/kbtu/4thSemester/web/Lab4/angular/node_modules/igniteui-webcomponents/components/tree/tree.navigation.js"],"sourcesContent":["export const NAVIGATION_KEYS = new Set([\n    'down',\n    'up',\n    'left',\n    'right',\n    'arrowdown',\n    'arrowup',\n    'arrowleft',\n    'arrowright',\n    'home',\n    'end',\n    'space',\n    'spacebar',\n    ' ',\n]);\nexport class IgcTreeNavigationService {\n    constructor(tree, selectionService) {\n        this._focusedItem = null;\n        this._lastFocusedItem = null;\n        this._activeItem = null;\n        this._visibleChildren = [];\n        this._invisibleChildren = new Set();\n        this._disabledChildren = new Set();\n        this.tree = tree;\n        this.selectionService = selectionService;\n    }\n    updateVisChild() {\n        var _a;\n        this._visibleChildren = ((_a = this.tree) === null || _a === void 0 ? void 0 : _a.items)\n            ? this.tree.items.filter((i) => !(this._invisibleChildren.has(i) || this._disabledChildren.has(i)))\n            : [];\n    }\n    get focusedItem() {\n        return this._focusedItem;\n    }\n    focusItem(value, shouldFocus = true) {\n        var _a;\n        if (this._focusedItem === value) {\n            return;\n        }\n        this._lastFocusedItem = this._focusedItem;\n        if (this._lastFocusedItem) {\n            this._lastFocusedItem.removeAttribute('tabindex');\n        }\n        this._focusedItem = value;\n        if (this._focusedItem !== null && shouldFocus) {\n            this._focusedItem.tabIndex = 0;\n            this._focusedItem.focus({\n                preventScroll: true,\n            });\n            (_a = this._focusedItem.wrapper) === null || _a === void 0 ? void 0 : _a.scrollIntoView({\n                behavior: 'smooth',\n                block: 'nearest',\n                inline: 'nearest',\n            });\n        }\n    }\n    get activeItem() {\n        return this._activeItem;\n    }\n    setActiveItem(value, shouldEmit = true) {\n        if (this._activeItem === value) {\n            return;\n        }\n        if (this._activeItem && value) {\n            this._activeItem.active = false;\n        }\n        this._activeItem = value;\n        if (this._activeItem) {\n            this._activeItem.active = true;\n        }\n        if (shouldEmit && this._activeItem) {\n            this.tree.emitEvent('igcActiveItem', { detail: this._activeItem });\n        }\n    }\n    get visibleChildren() {\n        return this._visibleChildren;\n    }\n    update_disabled_cache(item) {\n        if (item.disabled) {\n            this._disabledChildren.add(item);\n        }\n        else {\n            this._disabledChildren.delete(item);\n        }\n        this.updateVisChild();\n    }\n    delete_item(item) {\n        if (this.activeItem === item) {\n            this.setActiveItem(null);\n        }\n        if (this.focusedItem === item) {\n            this.focusItem(null, false);\n            const firstNotDisableItem = this.tree.items.find((i) => !i.disabled);\n            if (firstNotDisableItem) {\n                firstNotDisableItem.tabIndex = 0;\n                this.focusItem(firstNotDisableItem, false);\n            }\n        }\n    }\n    update_visible_cache(item, expanded, shouldUpdateNestedChildren = true, shouldUpdate = true) {\n        var _a, _b;\n        if (expanded && !this._invisibleChildren.has(item)) {\n            (_a = item.getChildren()) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n                this._invisibleChildren.delete(child);\n                if (shouldUpdateNestedChildren) {\n                    this.update_visible_cache(child, child.expanded, true, false);\n                }\n            });\n        }\n        else {\n            (_b = item\n                .getChildren({ flatten: true })) === null || _b === void 0 ? void 0 : _b.forEach((c) => this._invisibleChildren.add(c));\n        }\n        if (shouldUpdate) {\n            this.updateVisChild();\n        }\n    }\n    setFocusedAndActiveItem(item, isActive = true, shouldFocus = true) {\n        if (isActive) {\n            this.setActiveItem(item);\n        }\n        this.focusItem(item, shouldFocus);\n    }\n    handleKeydown(event) {\n        const key = event.key.toLowerCase();\n        if (!this.focusedItem) {\n            return;\n        }\n        if (!(NAVIGATION_KEYS.has(key) || key === '*')) {\n            if (key === 'enter') {\n                this.setActiveItem(this.focusedItem);\n            }\n            return;\n        }\n        event.preventDefault();\n        this.handleNavigation(event);\n    }\n    handleNavigation(event) {\n        switch (event.key.toLowerCase()) {\n            case 'home':\n                this.setFocusedAndActiveItem(this.visibleChildren[0]);\n                break;\n            case 'end':\n                this.setFocusedAndActiveItem(this.visibleChildren[this.visibleChildren.length - 1]);\n                break;\n            case 'arrowleft':\n            case 'left':\n                if (this.tree.dir === 'rtl') {\n                    this.handleArrowRight();\n                }\n                else {\n                    this.handleArrowLeft();\n                }\n                break;\n            case 'arrowright':\n            case 'right':\n                if (this.tree.dir === 'rtl') {\n                    this.handleArrowLeft();\n                }\n                else {\n                    this.handleArrowRight();\n                }\n                break;\n            case 'arrowup':\n            case 'up':\n                this.handleUpDownArrow(true, event);\n                break;\n            case 'arrowdown':\n            case 'down':\n                this.handleUpDownArrow(false, event);\n                break;\n            case '*':\n                this.handleAsterisk();\n                break;\n            case ' ':\n            case 'spacebar':\n            case 'space':\n                this.handleSpace(event.shiftKey);\n                break;\n            default:\n                return;\n        }\n    }\n    handleArrowLeft() {\n        var _a, _b, _c;\n        if (((_a = this.focusedItem) === null || _a === void 0 ? void 0 : _a.expanded) && ((_b = this.focusedItem.getChildren()) === null || _b === void 0 ? void 0 : _b.length)) {\n            this.setActiveItem(this.focusedItem);\n            this.focusedItem.collapseWithEvent();\n        }\n        else {\n            const parentItem = (_c = this.focusedItem) === null || _c === void 0 ? void 0 : _c.parent;\n            if (parentItem && !parentItem.disabled) {\n                this.setFocusedAndActiveItem(parentItem);\n            }\n        }\n    }\n    handleArrowRight() {\n        var _a, _b;\n        if (((_a = this.focusedItem.getChildren()) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            if (!((_b = this.focusedItem) === null || _b === void 0 ? void 0 : _b.expanded)) {\n                this.setActiveItem(this.focusedItem);\n                this.focusedItem.expandWithEvent();\n            }\n            else {\n                const firstChild = this.focusedItem\n                    .getChildren()\n                    .find((item) => !item.disabled);\n                if (firstChild) {\n                    this.setFocusedAndActiveItem(firstChild);\n                }\n            }\n        }\n    }\n    handleUpDownArrow(isUp, event) {\n        const next = this.getVisibleItem(this.focusedItem, isUp ? -1 : 1);\n        if (next === this.focusedItem) {\n            return;\n        }\n        if (event.ctrlKey) {\n            this.setFocusedAndActiveItem(next, false);\n        }\n        else {\n            this.setFocusedAndActiveItem(next);\n        }\n    }\n    handleAsterisk() {\n        var _a, _b, _c;\n        const items = ((_a = this.focusedItem) === null || _a === void 0 ? void 0 : _a.parent)\n            ? (_b = this.focusedItem.parent) === null || _b === void 0 ? void 0 : _b.getChildren()\n            : (_c = this.tree.items) === null || _c === void 0 ? void 0 : _c.filter((item) => item.level === 0);\n        items === null || items === void 0 ? void 0 : items.forEach((item) => {\n            if (!item.disabled && !item.expanded && item.hasChildren) {\n                item.expandWithEvent();\n            }\n        });\n    }\n    handleSpace(shiftKey = false) {\n        if (this.tree.selection === 'none') {\n            this.setActiveItem(this.focusedItem);\n            return;\n        }\n        this.setActiveItem(this.focusedItem);\n        if (shiftKey) {\n            this.selectionService.selectMultipleItems(this.focusedItem);\n            return;\n        }\n        if (this.focusedItem.selected) {\n            this.selectionService.deselectItem(this.focusedItem);\n        }\n        else {\n            this.selectionService.selectItem(this.focusedItem);\n        }\n    }\n    getVisibleItem(item, dir = 1) {\n        const itemIndex = this.visibleChildren.indexOf(item);\n        return this.visibleChildren[itemIndex + dir] || item;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}