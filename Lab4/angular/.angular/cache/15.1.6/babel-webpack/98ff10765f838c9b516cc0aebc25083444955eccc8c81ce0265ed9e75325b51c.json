{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { html } from 'lit';\nimport { directive, PartType } from 'lit/directive.js';\nimport { AsyncDirective } from 'lit/async-directive.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { Virtualizer } from './Virtualizer.js';\nexport { virtualizerRef } from './Virtualizer.js';\nexport const defaultKeyFunction = item => item;\nexport const defaultRenderItem = (item, idx) => html`${idx}: ${JSON.stringify(item, null, 2)}`;\nclass VirtualizeDirective extends AsyncDirective {\n  constructor(part) {\n    super(part);\n    this._virtualizer = null;\n    this._first = 0;\n    this._last = -1;\n    this._renderItem = (item, idx) => defaultRenderItem(item, idx + this._first);\n    this._keyFunction = (item, idx) => defaultKeyFunction(item, idx + this._first);\n    this._items = [];\n    if (part.type !== PartType.CHILD) {\n      throw new Error('The virtualize directive can only be used in child expressions');\n    }\n  }\n  render(config) {\n    if (config) {\n      this._setFunctions(config);\n    }\n    const itemsToRender = [];\n    // TODO (graynorton): Is this the best / only place to ensure\n    // that _last isn't outside the current bounds of the items array?\n    // Not sure we should ever arrive here with it out of bounds.\n    // Repro case for original issue: https://tinyurl.com/yes8b2e6\n    const lastItem = Math.min(this._items.length, this._last + 1);\n    if (this._first >= 0 && this._last >= this._first) {\n      for (let i = this._first; i < lastItem; i++) {\n        itemsToRender.push(this._items[i]);\n      }\n    }\n    return repeat(itemsToRender, this._keyFunction, this._renderItem);\n  }\n  update(part, [config]) {\n    this._setFunctions(config);\n    this._items = config.items || [];\n    if (this._virtualizer) {\n      this._updateVirtualizerConfig(part, config);\n    } else {\n      this._initialize(part, config);\n    }\n    return this.render();\n  }\n  _updateVirtualizerConfig(part, config) {\n    const compatible = this._virtualizer.updateLayoutConfig(config.layout || {});\n    if (!compatible) {\n      const hostElement = part.parentNode;\n      this._makeVirtualizer(hostElement, config);\n    }\n    this._virtualizer.items = this._items;\n  }\n  _setFunctions(config) {\n    const {\n      renderItem,\n      keyFunction\n    } = config;\n    if (renderItem) {\n      this._renderItem = (item, idx) => renderItem(item, idx + this._first);\n    }\n    if (keyFunction) {\n      this._keyFunction = (item, idx) => keyFunction(item, idx + this._first);\n    }\n  }\n  _makeVirtualizer(hostElement, config) {\n    if (this._virtualizer) {\n      this._virtualizer.disconnected();\n    }\n    const {\n      layout,\n      scroller,\n      items\n    } = config;\n    this._virtualizer = new Virtualizer({\n      hostElement,\n      layout,\n      scroller\n    });\n    this._virtualizer.items = items;\n    this._virtualizer.connected();\n  }\n  _initialize(part, config) {\n    const hostElement = part.parentNode;\n    if (hostElement && hostElement.nodeType === 1) {\n      hostElement.addEventListener('rangeChanged', e => {\n        e.stopPropagation();\n        this._first = e.first;\n        this._last = e.last;\n        this.setValue(this.render());\n      });\n      this._makeVirtualizer(hostElement, config);\n    }\n  }\n  disconnected() {\n    var _a;\n    (_a = this._virtualizer) === null || _a === void 0 ? void 0 : _a.disconnected();\n  }\n  reconnected() {\n    var _a;\n    (_a = this._virtualizer) === null || _a === void 0 ? void 0 : _a.connected();\n  }\n}\nexport const virtualize = directive(VirtualizeDirective);","map":{"version":3,"names":["html","directive","PartType","AsyncDirective","repeat","Virtualizer","virtualizerRef","defaultKeyFunction","item","defaultRenderItem","idx","JSON","stringify","VirtualizeDirective","constructor","part","_virtualizer","_first","_last","_renderItem","_keyFunction","_items","type","CHILD","Error","render","config","_setFunctions","itemsToRender","lastItem","Math","min","length","i","push","update","items","_updateVirtualizerConfig","_initialize","compatible","updateLayoutConfig","layout","hostElement","parentNode","_makeVirtualizer","renderItem","keyFunction","disconnected","scroller","connected","nodeType","addEventListener","e","stopPropagation","first","last","setValue","_a","reconnected","virtualize"],"sources":["/Users/tima/kbtu/4thSemester/web/Lab4/angular/node_modules/@lit-labs/virtualizer/virtualize.js"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { html } from 'lit';\nimport { directive, PartType } from 'lit/directive.js';\nimport { AsyncDirective } from 'lit/async-directive.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { Virtualizer } from './Virtualizer.js';\nexport { virtualizerRef } from './Virtualizer.js';\nexport const defaultKeyFunction = (item) => item;\nexport const defaultRenderItem = (item, idx) => html `${idx}: ${JSON.stringify(item, null, 2)}`;\nclass VirtualizeDirective extends AsyncDirective {\n    constructor(part) {\n        super(part);\n        this._virtualizer = null;\n        this._first = 0;\n        this._last = -1;\n        this._renderItem = (item, idx) => defaultRenderItem(item, idx + this._first);\n        this._keyFunction = (item, idx) => defaultKeyFunction(item, idx + this._first);\n        this._items = [];\n        if (part.type !== PartType.CHILD) {\n            throw new Error('The virtualize directive can only be used in child expressions');\n        }\n    }\n    render(config) {\n        if (config) {\n            this._setFunctions(config);\n        }\n        const itemsToRender = [];\n        // TODO (graynorton): Is this the best / only place to ensure\n        // that _last isn't outside the current bounds of the items array?\n        // Not sure we should ever arrive here with it out of bounds.\n        // Repro case for original issue: https://tinyurl.com/yes8b2e6\n        const lastItem = Math.min(this._items.length, this._last + 1);\n        if (this._first >= 0 && this._last >= this._first) {\n            for (let i = this._first; i < lastItem; i++) {\n                itemsToRender.push(this._items[i]);\n            }\n        }\n        return repeat(itemsToRender, this._keyFunction, this._renderItem);\n    }\n    update(part, [config]) {\n        this._setFunctions(config);\n        this._items = config.items || [];\n        if (this._virtualizer) {\n            this._updateVirtualizerConfig(part, config);\n        }\n        else {\n            this._initialize(part, config);\n        }\n        return this.render();\n    }\n    _updateVirtualizerConfig(part, config) {\n        const compatible = this._virtualizer.updateLayoutConfig(config.layout || {});\n        if (!compatible) {\n            const hostElement = part.parentNode;\n            this._makeVirtualizer(hostElement, config);\n        }\n        this._virtualizer.items = this._items;\n    }\n    _setFunctions(config) {\n        const { renderItem, keyFunction } = config;\n        if (renderItem) {\n            this._renderItem = (item, idx) => renderItem(item, idx + this._first);\n        }\n        if (keyFunction) {\n            this._keyFunction = (item, idx) => keyFunction(item, idx + this._first);\n        }\n    }\n    _makeVirtualizer(hostElement, config) {\n        if (this._virtualizer) {\n            this._virtualizer.disconnected();\n        }\n        const { layout, scroller, items } = config;\n        this._virtualizer = new Virtualizer({ hostElement, layout, scroller });\n        this._virtualizer.items = items;\n        this._virtualizer.connected();\n    }\n    _initialize(part, config) {\n        const hostElement = part.parentNode;\n        if (hostElement && hostElement.nodeType === 1) {\n            hostElement.addEventListener('rangeChanged', (e) => {\n                e.stopPropagation();\n                this._first = e.first;\n                this._last = e.last;\n                this.setValue(this.render());\n            });\n            this._makeVirtualizer(hostElement, config);\n        }\n    }\n    disconnected() {\n        var _a;\n        (_a = this._virtualizer) === null || _a === void 0 ? void 0 : _a.disconnected();\n    }\n    reconnected() {\n        var _a;\n        (_a = this._virtualizer) === null || _a === void 0 ? void 0 : _a.connected();\n    }\n}\nexport const virtualize = directive(VirtualizeDirective);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}