{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { property, state } from 'lit/decorators.js';\nimport { blazorDeepImport } from '../common/decorators/blazorDeepImport.js';\nimport { blazorSuppress } from '../common/decorators/blazorSuppress.js';\nimport { IgcInputBaseComponent } from '../input/input-base.js';\nimport { MaskParser } from './mask-parser.js';\nlet IgcMaskInputBaseComponent = class IgcMaskInputBaseComponent extends IgcInputBaseComponent {\n  constructor() {\n    super(...arguments);\n    this.parser = new MaskParser();\n    this.selection = {\n      start: 0,\n      end: 0\n    };\n    this.compositionStart = 0;\n    this.hasFocus = false;\n    this.maskedValue = '';\n    this._mask = '';\n    this.invalid = false;\n  }\n  get inputSelection() {\n    return {\n      start: this.input.selectionStart || 0,\n      end: this.input.selectionEnd || 0\n    };\n  }\n  get emptyMask() {\n    return this.parser.apply();\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this._mask = this._mask || this.parser.mask;\n    this.prompt = this.prompt || this.parser.prompt;\n  }\n  setCustomValidity(message) {\n    this.input.setCustomValidity(message);\n    this.invalid = !this.input.checkValidity();\n  }\n  select() {\n    this.input.select();\n  }\n  handleInput({\n    inputType,\n    isComposing\n  }) {\n    const EMPTY = '';\n    const value = this.input.value;\n    const {\n      start,\n      end\n    } = this.selection;\n    const deleteEnd = this.parser.getNextNonLiteralPosition(end) + 1;\n    switch (inputType) {\n      case 'deleteContentForward':\n        this.updateInput(EMPTY, {\n          start,\n          end: deleteEnd\n        });\n        return this.updateComplete.then(() => this.input.setSelectionRange(deleteEnd, deleteEnd));\n      case 'deleteContentBackward':\n        if (isComposing) return;\n        return this.updateInput(EMPTY, {\n          start: this.parser.getPreviousNonLiteralPosition(this.inputSelection.start),\n          end\n        });\n      case 'deleteByCut':\n        return this.updateInput(EMPTY, this.selection);\n      case 'insertText':\n        return this.updateInput(value.substring(start, this.inputSelection.end), this.selection);\n      case 'insertFromPaste':\n        return this.updateInput(value.substring(start, this.inputSelection.end), {\n          start,\n          end: this.inputSelection.start\n        });\n      case 'insertFromDrop':\n        return this.updateInput(value.substring(this.inputSelection.start, this.inputSelection.end), {\n          ...this.inputSelection\n        });\n    }\n  }\n  handleKeydown({\n    key\n  }) {\n    if (!key) {\n      return;\n    }\n    this.selection = this.inputSelection;\n  }\n  handleCut() {\n    this.selection = this.inputSelection;\n  }\n  handleDragStart() {\n    this.selection = this.inputSelection;\n  }\n  handleCompositionStart() {\n    this.compositionStart = this.inputSelection.start;\n  }\n  handleCompositionEnd({\n    data\n  }) {\n    this.updateInput(data, {\n      start: this.compositionStart,\n      end: this.inputSelection.end\n    });\n  }\n  handleInvalid() {\n    this.invalid = true;\n  }\n  setSelectionRange(start, end, direction) {\n    super.setSelectionRange(start, end, direction);\n    this.selection = {\n      start,\n      end\n    };\n  }\n};\n__decorate([state()], IgcMaskInputBaseComponent.prototype, \"hasFocus\", void 0);\n__decorate([state()], IgcMaskInputBaseComponent.prototype, \"maskedValue\", void 0);\n__decorate([state()], IgcMaskInputBaseComponent.prototype, \"_mask\", void 0);\n__decorate([property()], IgcMaskInputBaseComponent.prototype, \"prompt\", void 0);\n__decorate([property({\n  reflect: true,\n  type: Boolean\n})], IgcMaskInputBaseComponent.prototype, \"invalid\", void 0);\n__decorate([blazorSuppress()], IgcMaskInputBaseComponent.prototype, \"setSelectionRange\", null);\nIgcMaskInputBaseComponent = __decorate([blazorDeepImport], IgcMaskInputBaseComponent);\nexport { IgcMaskInputBaseComponent };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","property","state","blazorDeepImport","blazorSuppress","IgcInputBaseComponent","MaskParser","IgcMaskInputBaseComponent","constructor","parser","selection","start","end","compositionStart","hasFocus","maskedValue","_mask","invalid","inputSelection","input","selectionStart","selectionEnd","emptyMask","apply","connectedCallback","mask","prompt","setCustomValidity","message","checkValidity","select","handleInput","inputType","isComposing","EMPTY","value","deleteEnd","getNextNonLiteralPosition","updateInput","updateComplete","then","setSelectionRange","getPreviousNonLiteralPosition","substring","handleKeydown","handleCut","handleDragStart","handleCompositionStart","handleCompositionEnd","data","handleInvalid","direction","prototype","reflect","type","Boolean"],"sources":["/Users/tima/kbtu/4thSemester/web/Lab4/angular/node_modules/igniteui-webcomponents/components/mask-input/mask-input-base.js"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { property, state } from 'lit/decorators.js';\nimport { blazorDeepImport } from '../common/decorators/blazorDeepImport.js';\nimport { blazorSuppress } from '../common/decorators/blazorSuppress.js';\nimport { IgcInputBaseComponent } from '../input/input-base.js';\nimport { MaskParser } from './mask-parser.js';\nlet IgcMaskInputBaseComponent = class IgcMaskInputBaseComponent extends IgcInputBaseComponent {\n    constructor() {\n        super(...arguments);\n        this.parser = new MaskParser();\n        this.selection = { start: 0, end: 0 };\n        this.compositionStart = 0;\n        this.hasFocus = false;\n        this.maskedValue = '';\n        this._mask = '';\n        this.invalid = false;\n    }\n    get inputSelection() {\n        return {\n            start: this.input.selectionStart || 0,\n            end: this.input.selectionEnd || 0,\n        };\n    }\n    get emptyMask() {\n        return this.parser.apply();\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this._mask = this._mask || this.parser.mask;\n        this.prompt = this.prompt || this.parser.prompt;\n    }\n    setCustomValidity(message) {\n        this.input.setCustomValidity(message);\n        this.invalid = !this.input.checkValidity();\n    }\n    select() {\n        this.input.select();\n    }\n    handleInput({ inputType, isComposing }) {\n        const EMPTY = '';\n        const value = this.input.value;\n        const { start, end } = this.selection;\n        const deleteEnd = this.parser.getNextNonLiteralPosition(end) + 1;\n        switch (inputType) {\n            case 'deleteContentForward':\n                this.updateInput(EMPTY, { start, end: deleteEnd });\n                return this.updateComplete.then(() => this.input.setSelectionRange(deleteEnd, deleteEnd));\n            case 'deleteContentBackward':\n                if (isComposing)\n                    return;\n                return this.updateInput(EMPTY, {\n                    start: this.parser.getPreviousNonLiteralPosition(this.inputSelection.start),\n                    end,\n                });\n            case 'deleteByCut':\n                return this.updateInput(EMPTY, this.selection);\n            case 'insertText':\n                return this.updateInput(value.substring(start, this.inputSelection.end), this.selection);\n            case 'insertFromPaste':\n                return this.updateInput(value.substring(start, this.inputSelection.end), {\n                    start,\n                    end: this.inputSelection.start,\n                });\n            case 'insertFromDrop':\n                return this.updateInput(value.substring(this.inputSelection.start, this.inputSelection.end), { ...this.inputSelection });\n        }\n    }\n    handleKeydown({ key }) {\n        if (!key) {\n            return;\n        }\n        this.selection = this.inputSelection;\n    }\n    handleCut() {\n        this.selection = this.inputSelection;\n    }\n    handleDragStart() {\n        this.selection = this.inputSelection;\n    }\n    handleCompositionStart() {\n        this.compositionStart = this.inputSelection.start;\n    }\n    handleCompositionEnd({ data }) {\n        this.updateInput(data, {\n            start: this.compositionStart,\n            end: this.inputSelection.end,\n        });\n    }\n    handleInvalid() {\n        this.invalid = true;\n    }\n    setSelectionRange(start, end, direction) {\n        super.setSelectionRange(start, end, direction);\n        this.selection = { start, end };\n    }\n};\n__decorate([\n    state()\n], IgcMaskInputBaseComponent.prototype, \"hasFocus\", void 0);\n__decorate([\n    state()\n], IgcMaskInputBaseComponent.prototype, \"maskedValue\", void 0);\n__decorate([\n    state()\n], IgcMaskInputBaseComponent.prototype, \"_mask\", void 0);\n__decorate([\n    property()\n], IgcMaskInputBaseComponent.prototype, \"prompt\", void 0);\n__decorate([\n    property({ reflect: true, type: Boolean })\n], IgcMaskInputBaseComponent.prototype, \"invalid\", void 0);\n__decorate([\n    blazorSuppress()\n], IgcMaskInputBaseComponent.prototype, \"setSelectionRange\", null);\nIgcMaskInputBaseComponent = __decorate([\n    blazorDeepImport\n], IgcMaskInputBaseComponent);\nexport { IgcMaskInputBaseComponent };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}